version: "3.8"

services:
  postgres:
    container_name: postgres
    image: postgres:14
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./tmp/pgdata:/var/lib/postgresql/data
      - ./create_test_db.sh:/docker-entrypoint-initdb.d/create_test_db.sh
    networks:
      - project

  pgadmin:
    container_name: prakticum-pgadmin
    image: dpage/pgadmin4:4.18
    restart: always
    environment:
      PGADMIN_LISTEN_PORT: 8088
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "8088:8088"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - project

  server:
    container_name: prakticum-server
    image: prackicum-server
    build:
      context: .
      dockerfile: Dockerfile.server
    restart: always
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    environment:
      SERVER_PORT: ${SERVER_PORT}
      POSTGRES_HOST: ${POSTGRES_HOST}
      NODE_ENV: ${ENV}
      AUTH_URL: ${AUTH_URL}
    env_file:
      - .env
    depends_on:
      - postgres
      - nginx
    command: ["./wait-for-it/wait-for-it.sh", "postgres:${POSTGRES_PORT}", "--", "node", "packages/server/dist/index.js"]
    networks:
      - project

  nginx:
    container_name: prakticum-nginx
    image: prackicum-nginx
    build:
      context: .
      dockerfile: Dockerfile.ginx
      args:
        DOMAIN: ${DOMAIN}
    restart: always
    ports:
      - "80:80"
    environment:
      - DOMAIN=${DOMAIN}
    networks:
      - project

volumes:
  pgadmin-data:

networks:
  project:
    driver: bridge
